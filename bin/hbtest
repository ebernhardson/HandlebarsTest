#!/usr/bin/php -dopen_basedir=.
<?php

require_once('inc/utils.inc');

if (count($argv) < 3) {
    print_help();
}

$test_times = (count($argv) > 3) ? $argv[3] : 100000;
if ($argv[1] == 'none') {
    warn("#do $test_times loop test");
    $start_time = microtime(true);
    for ($i = 1; $i < $test_times;$i++) {
    }
    $duration = microtime(true) - $start_time;
    warn("Run $test_times times nop takes $duration seconds");
    exit();
}

$vars = json_decode(file_get_contents($argv[2]), true);
warn("#Input:");
warn(print_r($vars, true));

// Prepare template
prepare_tmpl($argv[1], preg_replace('/(-\d+)*\.json/', '.tmpl', $argv[2]));

// Execute template
@$result = $test_tmpl ? $test_tmpl->$test_method($vars) : $test_method($vars);
warn("#Output: $result");

$standard = file_get_contents(preg_replace('/\.json/', '.txt', $argv[2]));
$match = 'YES';
if ($result !== $standard) {
    if (preg_replace('/\r|\n/', '', $result) !== preg_replace('/\r|\n/', '', $standard)) {
        warn("ERROR: the output is not same with fixture\n$standard");
        $match = 'NO';
    } else {
        warn("ERROR: the output is not exact same with fixture (more or less CR/LF)\n");
        $match = 'CR/LF';
    }
}

warn("#do $test_times loop test");

$start_time = microtime(true);
if ($test_tmpl) {
    for ($i = 1; $i < $test_times;$i++) {
        $test_tmpl->$test_method($vars);
    }
} else {
    for ($i = 1; $i < $test_times;$i++) {
@        $test_method($vars);
    }
}

$duration = microtime(true) - $start_time;
warn("Render $test_times times with $argv[1] lib takes $duration seconds");
print json_encode(Array(
    'lib' => $argv[1],
    'test' => $argv[2],
    'loop' => $test_times,
    'time' => $duration,
    'match' => $match
));

function print_help() {
    global $argv;

    print <<<PRINTEND

usage: $argv[0] libName testFile [testTimes]

    libName = one of: none , lightncandy , handlebars.php , mustache-php , mustache.php , *
    testTimes = default is 100000

    Example: $argv[0] mustache.php fixture/001-simple-vars-001.json


PRINTEND
    ;
    exit(1);
}

?>
