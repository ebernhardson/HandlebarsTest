#!/usr/bin/php -dopen_basedir=.
<?php
$reports = Array();
$libs = Array();
$base = 'https://github.com/zordius/HandlebarsTest/blob/master/';

foreach (glob('cloned/*') as $file) {
    $libs[] = preg_replace('/cloned\//', '', $file);
}

foreach (glob('fixture/*.json') as $test) {
  $report = Array();
  foreach ($libs as $lib) {
    $result = system("bin/hbtest $lib $test $argv[1]");
    $report[] = json_decode($result, true);
  }
  $reports[$test] = $report;
}
$meta = $report[0];

$Fmap = Array(
    'YES' => '%Y%',
    'NO' => '%X%',
    'CR/LF' => 'cr/lf',
    'QUOTE' => 'quote',
    'SINGLEQUOTE' => 'squote'
);

$Dict = Array(
    'YES' => 'Exact same behavior with handlebars.js run in nodejs',
    'NO' => 'Do not support, can not parse the template, or do not output for array value',
    'CR/LF' => 'Output more or less CR/LF (minor issue)',
    'QUOTE' => 'Encode \' to &amp;#039;, not to &amp;#x27; (minor issue)',
    'SINGLEQUOTE' => 'Do not encode \' to &amp;#x27;'
);

// output quick feature report
if ($argv[1] && ($argv[1] < 3)) {
    print "\n";
    foreach ($Dict as $k => $v) {
        print "* $k : $v\n";
    }
    print "|\ttest case\t| " . join("\t|\t", $libs) . "\t|\n";
    foreach ($reports as $name => $report) {
        $fn = substr(basename($name, '.json'), -20);
        print "| $fn";
        foreach ($report as $test) {
            print "\t|\t" . substr("                ". $test['match'], -13);
        }
        print " |\n";
    }
    exit;
}

date_default_timezone_set('Asia/Taipei');
$rt = date('Ymd.His');
$rn  = "report/$rt";

// output json report
file_put_contents("$rn.json", json_encode(Array(
    'meta' => Array(
        'loop' => $meta['loop'],
        'time' => $rt,
    ),
    'reports' => $reports,
)));

// output twiki report
ob_start();
print "---++ Report $rt\n";
print "%TWISTY{}%\n";
print "Test libraries in *{$meta['loop']}* times, results as N seconds\n";
print "%TABLE{name=\"hbreport$rt\"}%\n";
print "| *test case* | *" . join('* | *', $libs) . "* |\n";

$i = 0;
foreach ($reports as $name => $report) {
    $i++;
    $fn = basename($name);
    $tn = preg_replace('/-\d+\.json/', '', $name);
    $sn = preg_replace('/\.json/', '.txt', $name);
    print "| $i <a href=\"$base$name\">$fn</a><br/><a href=\"$base$tn.tmpl\">(template)</a> <a href=\"$base$sn\">(result)</a> $i";
    foreach ($report as $test) {
        print ' | ' . number_format($test['time'], 3);
    }
    print " |\n";
}

$rnum = count($reports) + 1;
$lnum = count($libs) + 1;

print "%CHART{type=\"bar\" name=\"hbchart$rt\" table=\"hbreport$rt\"  data=\"R2:C2..R$rnum:C$lnum\" xaxis=\"R2:C1..R$rnum:C1\" legend=\"R1:C2..R1:C$lnum\" ymin=\"0\" yaxis=\"on\" xaxisangle=\"1\" width=\"1000\" }%\n";

print "\nFeature Test:\n";
print "| *test case* | *" . join('* | *', $libs) . "* |\n";
$i = 0;

foreach ($reports as $name => $report) {
    $i++;
    $fn = basename($name);
    $tn = preg_replace('/-\d+\.json/', '', $name);
    $sn = preg_replace('/\.json/', '.txt', $name);
    print "| $i <a href=\"$base$name\">$fn</a><br/><a href=\"$base$tn.tmpl\">(template)</a> <a href=\"$base$sn\">(result)</a> $i";
    foreach ($report as $test) {
        print ' | ' . $Fmap[$test['match']];
    }
    print " |\n";
}
print "%ENDTWISTY%\n";

file_put_contents("$rn.twiki", ob_get_clean());

?>
