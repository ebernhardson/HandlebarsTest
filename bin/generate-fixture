#!/usr/bin/env node

var fs = require('fs'),
    handlebars = require('handlebars'),
    dir = 'fixture/',
    partial_total = 0,
    partial_ok = 0,
    gen_total = 0,
    ok_total = 0,
    generateFixtures = function () {
        fs.readdir(dir, function (err, files) {
            files.forEach(function (file) {
                var tmpl = file.replace(/-\d+\.json/, '.tmpl');
        
                if (!file.match(/\.json/)) {
                    return;
                }
        
                gen_total += 1;
                console.log('# ' + file + ' > ' + tmpl);
                fs.readFile(dir + file, 'utf8', function (err, data) {
                    var json = JSON.parse(data);
                    fs.readFile(dir + tmpl, 'utf8', function (err, data) {
                        var html,
                            fn = file.replace(/\.json/, '.txt');

                        try {
                            html = handlebars.compile(data)(json);
                        } catch (E) {
                            console.log('ERROR on compile ' + file + '!!!! :' + E);
                        }
        
                        fs.writeFileSync(dir + fn, html);
                        ok_total += 1;
                        console.log('  ' + fn + ' OK');
                        if (gen_total == ok_total) {
                            console.log('<< ALL SUCCESSED: ' + gen_total);
                        }
                    });
                });
            });
        });
    };

fs.readdir(dir, function (err, files) {
    files.forEach(function (file) {
        if (!file.match(/\.tmpl/)) {
            return;
        }
        partial_total++;
        fs.readFile(dir + file, 'utf8', function (err, data) {
            handlebars.registerPartial(file.replace(/\.tmpl/, ''), data);
            partial_ok++;
            if (partial_ok == partial_total) {
                generateFixtures();
            }
        });
    });
});

